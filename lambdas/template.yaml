AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  ju-lambda-go-fiber

  Sample SAM Template for ju-lambda-go-fiber

Globals:
  Function:
    Timeout: 60
    MemorySize: 256

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: ju-lambda-go-fiber
      CodeUri: app/
      Handler: bootstrap
      Runtime: go1.x
      Role: !GetAtt LambdaFunctionRole.Arn
      Environment:
        Variables:
          PARAM1: VALUE

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ju-serverless-app-role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: sample-lambda-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "logs:*"
                Resource: "*"

  LambdaFunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt LambdaFunction.Arn
      AuthType: NONE
      Cors:
        AllowMethods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        AllowOrigins: ["*"]
        AllowHeaders:
          [
            "Content-Type",
            "Authorization",
            "X-Amz-Date",
            "X-Api-Key",
            "X-Amz-Security-Token",
            "X-Amz-User-Agent",
          ]

Outputs:
  Endpoint:
    Description: URL for function
    Value: !GetAtt LambdaFunctionUrl.FunctionUrl
